#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Installation base dir.
# nna.base.dir=/usr/local/nn-analytics

# Web resources base dir.
# nna.web.base.dir=webapps/nna

# REST API Port for NNA.
nna.port=4567

# Whether NNA should override certain HDFS configuration properties to avoid communicating
# against your active cluster.
# NOTE: This is a defensive property. Please only set to false if you know what you are doing.
nna.support.bootstrap.overrides=false

# Which Query Engine implementation to use.
nna.query.engine.impl=org.apache.hadoop.hdfs.server.namenode.JavaStreamQueryEngine

# Whether NNA should manage embedded DB for /history.
nna.historical=false

# How long to sleep in-between NNA reports in milliseconds.
nna.suggestions.reload.sleep.ms=30000

# Turn on / off LDAP authentication.
ldap.enable=true

# Standard LDAP connection properties.
## BaseDn's %u will be replaced with username.
ldap.trust.store.path=file:/tmp/fake.truststore
ldap.trust.store.password=password
ldap.use.starttls=false
ldap.url=ldaps://ldap:port
ldap.base.dn.1=CN=Lastname\\, Firstname(account),OU=Somewhere,OU=Accounts,OU=Company,OU=House,DC=github,DC=com
ldap.base.dn.2=CN=_something,OU=Somewhere,OU=Accounts,OU=Company,DC=github,DC=com
ldap.connect.timeout=1000
ldap.response.timeout=1000
ldap.connection.pool.min.size=1
ldap.connection.pool.max.size=2

# Standard SSL properties.
#ssl.keystore.path=file:/tmp/keystore
#ssl.keystore.password=password

# Standard JWT properties.
## Signature defaults to JWSAlgorithm.HS256.
## Encryption defaults to JWEAlgorithm.DIR, EncryptionMethod.A128GCM.
jwt.signature.secret=11111111111111111111111111111111
jwt.encryption.secret=0000000000000000

# Turn on / off NNA authorization and ACLs.
authorization.enable=false

# NNA Authorization ACLs (This is refresh-able during runtime).
## Admin users can make changes to NNA like fetching, saving, and reloading namespace.
## Write users can issues commands that modify the live HDFS cluster.
## Read-only users can run read-only queries via NNA.
## Cache users only have access to cached NNA reports.
## Any user outside these lists cannot use any function of NNA.
## An * will mean all users have this access.
nna.admin.users=hdfs
nna.write.users=hdfsW
nna.readonly.users=hdfsR
nna.cache.users=hdfsR,hdfs

# NNA local users. (This is refresh-able during runtime).
## Local users added like so: user1:pass1,user2:pass2,...
## A non-empty list will enable JWT web authentication.
## A restart of NNA is required to go from empty to non-empty list.
## Can be used in combination with LDAP and other authentications.
nna.localonly.users=